
////////////////////////////////////////////////////////////////////////////////
// Обработка выполняет модификацию узлов XML по списку найденных файлов:
// - Поиск файлов осуществляется в каталоге: "КаталогПоиска";
// - По маске: "МаскаПоиска";
// - В содержании каждого найденного вайла выполняется поиск по выражению XPath
// - Меняется содержимое поля "ТекстовоеСодержимое", каждого найденного узла XML
// - Имеется возможность задания условия изменения,
//   в зависимости от исходного содержания "ТекстовоеСодержимое"
// - Перед перезаписью файла делается его резервная копия
// - Выполненные действия протоколируются в файл журнала 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// ИсправлениеРегистров
// Точка входа в механизм
// Необходимо заполнение следующих параметров обработки:
// КаталогПоиска (Строка) - Каталог где будет происходить поиск 
// МаскаПоиска   (Строка) - Маска для поиска файлов                 
// ФайлЖурнала   (Строка) - Имя файла журнала

Процедура ИсправлениеРегистров() Экспорт
	
	СписокФайлов = ВернутьСписокФайлов();
	СписокВыраженийXPath = ВернутьСписокВыраженийXPath();
	Разыменователь = Новый РазыменовательПространствИменDOM("ns", "http://v8.1c.ru/8.3/MDClasses");
	
	Для Каждого ЭлементФайл Из СписокФайлов Цикл
		ЛогЗаписать("Обработка файла: " + ЭлементФайл.ИмяБезРасширения);
		ДокументDOM = ПолучитьДокументDOM(ЭлементФайл.ПолноеИмя);
		ВыполнитьМодификацию(ДокументDOM, Разыменователь, СписокВыраженийXPath, ЭлементФайл.ПолноеИмя);
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьМодификацию(ДокументDOM, Разыменователь, СписокВыраженийXPath, ИмяФайлаДляЗаписи)

	ФайлИзменен = Ложь;
	
	Для Каждого ЭлементСтрока Из СписокВыраженийXPath Цикл
		
		Попытка	
			РезультатXPath = ДокументDOM.ВычислитьВыражениеXPath(ЭлементСтрока.Выражение,
				ДокументDOM,
				Разыменователь);
			
			Если РезультатXPath = Неопределено Тогда
				Продолжить;		
			КонецЕсли;
			
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			ЛогЗаписать("Ошибка выражения XPath: " + ОписаниеОшибки);
		КонецПопытки;
				
		Пока Истина Цикл
			
			Попытка
			
				Узел = РезультатXPath.ПолучитьСледующий();	
			
			Исключение
				
				Узел = Неопределено; 
				ОписаниеОшибки = ОписаниеОшибки();
				ЛогЗаписать("Ошибка выражения XPath: " + ОписаниеОшибки);

			КонецПопытки;
			
			Если Узел = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Если Не ЭлементСтрока.ПроверяемоеЗначение = Неопределено
				И Не Узел.ТекстовоеСодержимое = ЭлементСтрока.ПроверяемоеЗначение Тогда
				
				Продолжить;
				
			Иначе
				Узел.ТекстовоеСодержимое = ЭлементСтрока.ЦелевоеЗначение;
				ФайлИзменен = Истина;
			КонецЕсли;

		КонецЦикла;
			
	КонецЦикла;
	
	Если ФайлИзменен Тогда
		КопироватьФайл(ИмяФайлаДляЗаписи,ИмяФайлаДляЗаписи + ".back_" + Формат(ТекущаяДатаСеанса(), "ДФ=yyyy-MM-ddTHH-mm-ss"));
		Получатель = Новый ЗаписьXML;
		Получатель.ОткрытьФайл(ИмяФайлаДляЗаписи);
		ЗаписьDOM = Новый ЗаписьDOM();
		ЗаписьDOM.Записать(ДокументDOM, Получатель);
		Получатель.Закрыть();
		ЛогЗаписать("Файл изменен: " + ИмяФайлаДляЗаписи);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДокументDOM(ИмяФайла)

	Источник = Новый ЧтениеXML;
	Источник.ОткрытьФайл(ИмяФайла);
	ПостроительDOM = Новый ПостроительDOM();
	ДокументDOM = ПостроительDOM.Прочитать(Источник);
	Источник.Закрыть();
	Возврат ДокументDOM;

КонецФункции // ПолучитьДокументDOM()

Функция ВернутьСписокФайлов()

	Возврат НайтиФайлы(ЭтотОбъект.КаталогПоиска, ЭтотОбъект.МаскаПоиска, Истина);	

КонецФункции // ВернутьСписокФайлов()

Функция ВернутьСписокВыраженийXPath()
	
	// http://www.zvon.org/xxl/XPathTutorial/Output_rus/example1.html
	
	СписокВыражений = Новый ТаблицаЗначений();
	СписокВыражений.Колонки.Добавить("Выражение");
	СписокВыражений.Колонки.Добавить("ПроверяемоеЗначение");
	СписокВыражений.Колонки.Добавить("ЦелевоеЗначение");
	
	НоваяСтрока = СписокВыражений.Добавить();
	НоваяСтрока.Выражение = "//ns:Resource/ns:Properties/ns:Type/v8:StringQualifiers/v8:Length/parent::*/parent::*/parent::*/ns:Indexing|//ns:Dimension/ns:Properties/ns:Type/v8:StringQualifiers/v8:Length/parent::*/parent::*/parent::*/ns:Indexing";
	НоваяСтрока.ПроверяемоеЗначение = "Index"; // - исправлять
	НоваяСтрока.ЦелевоеЗначение = "DontIndex"; // - на значение
	
	НоваяСтрока = СписокВыражений.Добавить();	
	НоваяСтрока.Выражение = "//ns:Resource/ns:Properties/ns:Type/v8:StringQualifiers/v8:Length | //ns:Dimension/ns:Properties/ns:Type/v8:StringQualifiers/v8:Length";	
	НоваяСтрока.ПроверяемоеЗначение = Неопределено;
	НоваяСтрока.ЦелевоеЗначение = "1";
	
	Возврат СписокВыражений;
	
КонецФункции // ВернутьСписокВыраженийXPath()

Процедура ЛогЗаписать(ТекстСообщения, ВыводНаЭкран = Ложь)
	
	// https://infostart.ru/public/251947/
	
	ТекстРезультат = "[ "+Формат(ТекущаяДата(),"ДФ=yyyy-MM-ddTHH-mm-ss")+" ] : "+ТекстСообщения; 
	
	Если ВыводНаЭкран Тогда
		Сообщить(ТекстРезультат);
	КонецЕсли;
	
	ЛогФайл = Новый ЗаписьТекста(ЭтотОбъект.ФайлЖурнала, КодировкаТекста.UTF8,,Истина,);
	ЛогФайл.Записать(ТекстРезультат+Символы.ПС);
	ЛогФайл.Закрыть();
	
КонецПроцедуры

#КонецОбласти


